Archive member included to satisfy reference by file (symbol)

./avrlib.a(softspi.o)         softrock33.o (SOFTSPI_init)
./avrlib.a(gpio.o)            softrock33.o (GPIO_pin_mode)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
                              ./avrlib.a(softspi.o) (__udivmodsi4)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                              ./avrlib.a(softspi.o) (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x0000000000000400 rw !x
eeprom           0x0000000000810000 0x0000000000000200 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
LOAD softrock33.o
LOAD ./avrlib.a
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libatmega8.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                [0x0000000000800060]                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                [0x0000000000002000]                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                [0x0000000000000400]                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                [0x0000000000000200]                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xbe4
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x0000000000000026       0x20 ./avrlib.a(softspi.o)
                0x0000000000000046                . = ALIGN (0x2)
                0x0000000000000046                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000046        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000046                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000046                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000046                __ctors_start = .
 *(.ctors)
                0x0000000000000046                __ctors_end = .
                0x0000000000000046                __dtors_start = .
 *(.dtors)
                0x0000000000000046                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000046        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000046                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000046        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000052       0x10 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000052                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000062        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000066        0x2 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000066                __vector_1
                0x0000000000000066                __vector_12
                0x0000000000000066                __bad_interrupt
                0x0000000000000066                __vector_6
                0x0000000000000066                __vector_3
                0x0000000000000066                __vector_11
                0x0000000000000066                __vector_13
                0x0000000000000066                __vector_17
                0x0000000000000066                __vector_7
                0x0000000000000066                __vector_5
                0x0000000000000066                __vector_4
                0x0000000000000066                __vector_9
                0x0000000000000066                __vector_2
                0x0000000000000066                __vector_15
                0x0000000000000066                __vector_8
                0x0000000000000066                __vector_14
                0x0000000000000066                __vector_10
                0x0000000000000066                __vector_16
                0x0000000000000066                __vector_18
 .text          0x0000000000000068        0xa softrock33.o
 .text          0x0000000000000072      0x8ac ./avrlib.a(softspi.o)
                0x0000000000000072                SOFTSPI_init
                0x00000000000000b0                SOFTSPI_set_interface
                0x0000000000000188                SOFTSPI_write
 .text          0x000000000000091e      0x21e ./avrlib.a(gpio.o)
                0x000000000000091e                GPIO_init
                0x0000000000000934                GPIO_pin_mode
                0x00000000000009fc                GPIO_write_pin
                0x0000000000000a72                GPIO_toggle_pin
                0x0000000000000ab8                GPIO_read_pin
                0x0000000000000afa                GPIO_read_output_pin
 .text          0x0000000000000b3c        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000b3c        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000b3c        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000b3c                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000b3c       0x60 softrock33.o
                0x0000000000000b3c                main
 .text.libgcc.mul
                0x0000000000000b9c        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000b9c       0x44 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
                0x0000000000000b9c                __udivmodsi4
 .text.libgcc   0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000be0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000be0        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                0x0000000000000be0                exit
                0x0000000000000be0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000be0        0x4 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000be4                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000be4
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800060        0x0 softrock33.o
 .data          0x0000000000800060        0x0 ./avrlib.a(softspi.o)
 .data          0x0000000000800060        0x0 ./avrlib.a(gpio.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800060        0xb
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x0000000000800060        0x0 softrock33.o
 .bss           0x0000000000800060        0xb ./avrlib.a(softspi.o)
 .bss           0x000000000080006b        0x0 ./avrlib.a(gpio.o)
 .bss           0x000000000080006b        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_udivmodsi4.o)
 .bss           0x000000000080006b        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .bss           0x000000000080006b        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x000000000080006b                PROVIDE (__bss_end, .)
                0x0000000000000be4                __data_load_start = LOADADDR (.data)
                0x0000000000000be4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080006b        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x000000000080006b                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x20dc
 *(.stab)
 .stab          0x0000000000000000      0x6a8 softrock33.o
 .stab          0x00000000000006a8     0x11a0 ./avrlib.a(softspi.o)
                                       0x135c (size before relaxing)
 .stab          0x0000000000001848      0x894 ./avrlib.a(gpio.o)
                                        0xab0 (size before relaxing)

.stabstr        0x0000000000000000     0x17cf
 *(.stabstr)
 .stabstr       0x0000000000000000     0x17cf softrock33.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 softrock33.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./avrlib.a(softspi.o)
 .comment       0x0000000000000011       0x12 ./avrlib.a(gpio.o)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.avr.prop       0x0000000000000000       0x16
 .avr.prop      0x0000000000000000       0x16 ./avrlib.a(softspi.o)

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x48c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_abbrev   0x0000000000000000      0x44e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x17a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(softrock33.elf elf32-avr)
LOAD linker stubs
